openapi: 3.0.0
info:
  title: 5D World Map API
  description: 5D World Map API specification
  version: 1.0.0
servers:
  - url: https://5dworldmap.com/api/{version}
    variables:
      version:
        default: v1
paths:
  /search:
    post:
      tags:
        - Search
      summary: Search media
      description: Search media.
      requestBody:
        description: Search query
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keywords:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
                types:
                  type: array
                  items:
                    type: string
                usernames:
                  type: array
                  items:
                    type: string
                image_url:
                  type: string
                  format: uri
                sort:
                  type: string
                  enum: [created_at]
                order:
                  type: string
                  enum: [asc, desc]
                offset:
                  type: integer
                  example: 0
                limit:
                  type: integer
                  example: 10
              required:
                - keywords
                - categories
                - types
                - usernames
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
  
  /categories:
    get:
      tags:
        - Categories
      summary: Get categories
      description: Get categories.
      parameters:
      - name: offset
        in: query
        description: Offset
        required: false
        schema:
          type: integer
          example: 0
      - name: limit
        in: query
        description: Limit
        required: false
        schema:
          type: integer
          example: 10
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      summary: Add category
      description: Add category.      
      requestBody:
        description: category data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /categories/{id}:
    get:
      tags:
        - Categories
      summary: Get category
      description: Get category by identifier.
      parameters:
      - name: id
        in: path
        description: Category identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
        - Categories
      summary: Remove category
      description: Remove category by identifier.
      parameters:
      - name: id
        in: path
        description: Category identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /media:
    get:
      tags:
        - Media
      summary: Get media
      description: Get media.
      parameters:
      - name: type
        in: query
        description: Mime type
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: Sort
        required: false
        schema:
          type: string
          enum: [created_at]
      - name: order
        in: query
        description: Order
        required: false
        schema:
          type: string
          enum: [asc, desc]
      - name: offset
        in: query
        description: Offset
        required: false
        schema:
          type: integer
          example: 0
      - name: limit
        in: query
        description: Limit
        required: false
        schema:
          type: integer
          example: 10
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
    post:
      tags:
        - Media
      summary: Add media
      description: Add media.
      requestBody:
        description: Media data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
      responses:
        201:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
  /media/{id}:
    get:
      tags:
        - Media
      summary: Get media
      description: Get media by identifier.
      parameters:
      - name: id
        in: path
        description: Media identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
    delete:
      tags:
        - Media
      summary: Remove media
      description: Remove media by identifier.
      parameters:
      - name: id
        in: path
        description: Media identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
  /users:
    get:
      tags:
        - Users
      summary: Get users
      description: Get users.
      parameters:
      - name: offset
        in: query
        description: Offset
        required: false
        schema:
          type: integer
          example: 0
      - name: limit
        in: query
        description: Limit
        required: false
        schema:
          type: integer
          example: 10
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{username}:
    get:
      tags:
        - Users
      summary: Get user
      description: Get user by user name.
      parameters:
      - name: username
        in: path
        description: User name
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - name
        - updated_at
    Media:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
        type:
          type: string
          maxLength: 10
        categories:
          type: array
          items:
            type: string
        address:
          type: string
        description:
          type: string
        username:
          type: string
          maxLength: 20
        location:
          type: object
          properties:
            type:
              type: string
              example: Point
            coordinates:
              type: array
              items:
                type: number
                format: double
              example: [105.85271637244875, 21.028344772352863]
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - url
        - type
        - categories
        - address
        - description
        - username
        - location
        - created_at
    User:
      type: object
      properties:
        username:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 20
        last_name:
          type: string
          maxLength: 20
        updated_at:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 128
      required:
        - username
        - first_name
        - last_name
        - updated_at
        - email
tags:
  - name: Search
  - name: Categories
  - name: Media
  - name: Users